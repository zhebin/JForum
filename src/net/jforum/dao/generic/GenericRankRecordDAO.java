/*
 * Copyright (c) JForum Team
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, 
 * with or without modification, are permitted provided 
 * that the following conditions are met:
 * 
 * 1) Redistributions of source code must retain the above 
 * copyright notice, this list of conditions and the 
 * following  disclaimer.
 * 2)  Redistributions in binary form must reproduce the 
 * above copyright notice, this list of conditions and 
 * the following disclaimer in the documentation and/or 
 * other materials provided with the distribution.
 * 3) Neither the name of "Rafael Steil" nor 
 * the names of its contributors may be used to endorse 
 * or promote products derived from this software without 
 * specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT 
 * HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, 
 * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL 
 * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE 
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
 * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT 
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE
 * 
 * This file creation date: Mar 3, 2003 / 1:35:30 PM
 * The JForum Project
 * http://www.jforum.net
 */
package net.jforum.dao.generic;

import net.jforum.JForumExecutionContext;
import net.jforum.entities.RankRecord;
import net.jforum.exceptions.DatabaseException;
import net.jforum.util.DbUtils;
import net.jforum.util.preferences.SystemGlobals;

import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * @author Rafael Steil
 * @version $Id: GenericGroupDAO.java,v 1.8 2007/08/24 23:11:35 rafaelsteil Exp $
 */
public class GenericRankRecordDAO  extends AutoKeys implements net.jforum.dao.RankRecordDAO
{

    @Override
    public int selectTotalScore(int userId) {
        String q = SystemGlobals.getSql("RankingRecordModel.selectTotalScore");
        PreparedStatement p = null;
        ResultSet rs = null;
        int result = 0;
        try {
            p = JForumExecutionContext.getConnection().prepareStatement(q);
            p.setInt(1, userId);
            rs = p.executeQuery();
            if (rs.next()) {
                result = rs.getInt(1);
                rs.close();
                p.close();
            }
        } catch (SQLException e) {
            throw new DatabaseException(e);
        } finally {
            DbUtils.close(rs, p);
        }
        return result;
    }

    @Override
    public int selectTodayScore(int userId) {
        String q = SystemGlobals.getSql("RankingRecordModel.selectTodayScore");
        PreparedStatement p = null;
        ResultSet rs = null;
        int result = 0;
        try {
            p = JForumExecutionContext.getConnection().prepareStatement(q);
            p.setInt(1, userId);
            rs = p.executeQuery();
            if (rs.next()) {
                result = rs.getInt(1);
                rs.close();
                p.close();
            }
        } catch (SQLException e) {
            throw new DatabaseException(e);
        } finally {
            DbUtils.close(rs, p);
        }
        return result;
    }

    @Override
    public int add(RankRecord bean) {
        PreparedStatement p = null;
        try {
            p = this.getStatementForAutoKeys("RankingRecordModel.add");
            p.setInt(1, bean.getUserId());
            p.setString(2,bean.getType());
            p.setInt(3,bean.getScore());
            p.setInt(4,bean.getPkId());
            p.setDate(5, new Date(new java.util.Date().getTime()));
            this.setAutoGeneratedKeysQuery(SystemGlobals
                    .getSql("RankingRecordModel.lastGeneratedId"));
            int id = this.executeAutoKeysQuery(p);

            // this.addToGroup(id, new int[] {
            // SystemGlobals.getIntValue(ConfigKeys.DEFAULT_USER_GROUP) });
            return id;
        } catch (SQLException e) {
            throw new DatabaseException(e);
        } finally {
            DbUtils.close(p);
        }
    }
}
